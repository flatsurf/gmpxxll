Search.setIndex({"alltitles": {"gmpxxll : Adding long long Support to GMP\u2019s C++ Interface": [[1, null]], "gmpxxll.hpp": [[0, null]]}, "docnames": ["gmpxxll", "index"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["gmpxxll.rst", "index.rst"], "indexentries": {"gmpxxll::mpz_class (c++ class)": [[0, "_CPPv4N7gmpxxll9mpz_classE", false]], "gmpxxll::mpz_class::fits_slonglong_p (c++ function)": [[0, "_CPPv4NK7gmpxxll9mpz_class16fits_slonglong_pEv", false]], "gmpxxll::mpz_class::fits_ulonglong_p (c++ function)": [[0, "_CPPv4NK7gmpxxll9mpz_class16fits_ulonglong_pEv", false]], "gmpxxll::mpz_class::get_sll (c++ function)": [[0, "_CPPv4NK7gmpxxll9mpz_class7get_sllEv", false]], "gmpxxll::mpz_class::get_ull (c++ function)": [[0, "_CPPv4NK7gmpxxll9mpz_class7get_ullEv", false]], "gmpxxll::mpz_class::mpz_class (c++ function)": [[0, "_CPPv4N7gmpxxll9mpz_class9mpz_classEx", false], [0, "_CPPv4N7gmpxxll9mpz_class9mpz_classEy", false]]}, "objects": {"": [[0, 0, 1, "_CPPv4N7gmpxxll9mpz_classE", "gmpxxll::mpz_class"], [0, 1, 1, "_CPPv4NK7gmpxxll9mpz_class16fits_slonglong_pEv", "gmpxxll::mpz_class::fits_slonglong_p"], [0, 1, 1, "_CPPv4NK7gmpxxll9mpz_class16fits_ulonglong_pEv", "gmpxxll::mpz_class::fits_ulonglong_p"], [0, 1, 1, "_CPPv4NK7gmpxxll9mpz_class7get_sllEv", "gmpxxll::mpz_class::get_sll"], [0, 1, 1, "_CPPv4NK7gmpxxll9mpz_class7get_ullEv", "gmpxxll::mpz_class::get_ull"], [0, 1, 1, "_CPPv4N7gmpxxll9mpz_class9mpz_classEx", "gmpxxll::mpz_class::mpz_class"], [0, 1, 1, "_CPPv4N7gmpxxll9mpz_class9mpz_classEy", "gmpxxll::mpz_class::mpz_class"], [0, 2, 1, "_CPPv4N7gmpxxll9mpz_class9mpz_classEx", "gmpxxll::mpz_class::mpz_class::value"], [0, 2, 1, "_CPPv4N7gmpxxll9mpz_class9mpz_classEy", "gmpxxll::mpz_class::mpz_class::value"]]}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "functionParam", "C++ function parameter"]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:functionParam"}, "terms": {"": 0, "64": 0, "It": 0, "On": 0, "That": 1, "The": [0, 1], "These": 0, "To": 1, "actual": 0, "add": [0, 1], "all": 0, "also": 0, "alwai": 1, "an": 0, "anyth": 0, "ar": [0, 1], "avail": 0, "behaviour": 0, "binari": [0, 1], "bit": 0, "bool": 0, "both": 0, "c": 0, "cast": 0, "check": 0, "class": 0, "compat": [0, 1], "complet": 1, "const": 0, "construct": 0, "constructor": 0, "convers": 0, "deriv": 0, "describ": 1, "detail": 1, "doe": 0, "e": 1, "effici": 0, "els": 0, "enabl": 0, "everywher": 0, "explicit": 0, "featur": 1, "file": 0, "fit": 0, "fits_slonglong_p": 0, "fits_ulonglong_p": 0, "forward": 0, "freeli": 0, "from": 0, "function": 0, "g": 1, "gener": 0, "get_sll": 0, "get_ul": 0, "gmp": 0, "gmpxll": 0, "header": 1, "here": 1, "hpp": 1, "i": [0, 1], "implement": [0, 1], "implicitli": 0, "improv": 1, "includ": [0, 1], "inherit": 0, "inlin": 0, "integ": 0, "librari": 1, "limit": 0, "llp64": 0, "long": 0, "lp64": 0, "m": 0, "make": 0, "manual": 1, "max": 0, "method": 0, "microsoft": 0, "might": 0, "mix": 0, "most": 0, "mpz_class": [0, 1], "n": 0, "need": 0, "neglig": 0, "notabl": 0, "note": [0, 1], "offici": 0, "onli": 1, "optim": 0, "overhead": 0, "perform": [0, 1], "place": 0, "possibl": 0, "probabl": [0, 1], "project": 1, "provid": [0, 1], "public": 0, "pull": 1, "quit": 0, "rang": 0, "refer": 1, "regular": 0, "relat": 0, "repositori": 1, "request": 1, "return": 0, "should": 0, "sinc": 0, "situat": 1, "so": 0, "some": 0, "standard": 0, "std": 0, "submodul": 1, "support": 0, "take": 0, "thi": [0, 1], "through": 0, "too": 1, "two": 0, "type": 0, "undefin": 0, "unsign": 0, "us": [0, 1], "valu": 0, "veri": 0, "want": 0, "welcom": 1, "what": 1, "when": 0, "where": 0, "whether": 0, "which": 0, "wide": 0, "window": 0, "within": 0, "yet": 0, "you": 0, "your": 1}, "titles": ["gmpxxll.hpp", "gmpxxll : Adding long long Support to GMP\u2019s C++ Interface"], "titleterms": {"": 1, "ad": 1, "c": 1, "gmp": 1, "gmpxxll": [0, 1], "hpp": 0, "interfac": 1, "long": 1, "support": 1}})